name : Executando Testes
on:
    workflow_call:
jobs:
    unit-tests:
        name: Teste de Unidade
        runs-on: ubuntu-latest
        steps:
            - name: Obtendo código do projeto
              uses: actions/checkout@v4
            - name: Setup dotnet
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: 8.0.300
            - name: Executando testes de unidade
              working-directory: ./src
              run: dotnet test ./Review-Filmes.Test.Unit/Review-Filmes.Test.Unit.csproj
    
    integrations-testes:
        name: Teste de Integração
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:latest # boas praticas é usar versao especifica, mas é somente uma demo
                env:
                    POSTGRES_USER: review # boas pratica seria obter esses valores das secrets
                    POSTGRES_PASSWORD: 123456
                    POSTGRES_DB: review-filmes
                ports:
                    - 5432:5432
        steps:
            - name: Obtendo código do projeto
              uses: actions/checkout@v4
            - name: Setup dotnet
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: 8.0.300   
            - name: Executando testes integração
              working-directory: ./src
              run: dotnet test ./Review-Filmes.Test.Integration/Review-Filmes.Test.Integration.csproj
              env:
                ConnectionStrings__DefaultConnection: "Host=localhost;Port=5432;Database=review-filmes;Username=review;Password=123456" 

    sonar-qube:
        name: Scan SonarQube
        runs-on: ubuntu-latest
        steps:
            - name: Obtendo código do projeto
              uses: actions/checkout@v4
            - name: Setup dotnet
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: 8.0.300  
            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                    java-version: 17
                    distribution: 'zulu' 
            - name: Intalação do SonarQube
              run: dotnet tool install --global dotnet-sonarscanner    
            - name: Build e Analise
              working-directory: ./src
              run: |
                dotnet sonarscanner begin /k:"casoftsolutions_master-ci-cd" /o:"casoftsolutions" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
                dotnet build Review-Filmes.sln
                dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"


# Obs: por serem teste, nao precisa usar needs entre eles, pois se um falhar, já vai para a execucao da pipeline                    